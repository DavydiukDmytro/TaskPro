{"version":3,"file":"static/js/874.b357b4f8.chunk.js","mappings":"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","sources":["webpack://taskpro/./src/components/Background/Background.module.css?ea01","components/Background/Background.jsx","webpack://taskpro/./src/components/HeaderDashboard/HeaderDashboard.module.css?dbcf","webpack://taskpro/./src/components/ButtonFilter/FilterBtn.module.css?ec8d","components/ButtonFilter/FilterBtn.jsx","components/HeaderDashboard/HeaderDashboard.jsx","webpack://taskpro/./src/components/Button/Button.module.css?ce6f","components/Button/Button.jsx","webpack://taskpro/./src/components/MainDashboard/MainDashboard.module.css?76ac","webpack://taskpro/./src/components/CardSection/CardSection.module.css?326f","webpack://taskpro/./src/components/CardTitle/CardTitle.module.css?c44c","components/CardTitle/CardTitle.jsx","webpack://taskpro/./src/components/CardList/CardList.module.css?f86e","webpack://taskpro/./src/components/CardItem/CardItem.module.css?133d","components/CardItem/CardItem.jsx","components/CardList/CardList.jsx","components/CardSection/CardSeection.jsx","components/MainDashboard/MainDashboard.jsx","page/ScreensPage/ScreensPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"main\":\"Background_main__zJgRg\"};","import css from './Background.module.css'\n\nexport const Background = ({ children }) => {\n  return <main className={css.main}>{children}</main>;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"boardHeader\":\"HeaderDashboard_boardHeader__CFPK9\",\"title\":\"HeaderDashboard_title__bqgjc\"};","// extracted by mini-css-extract-plugin\nexport default {\"filt\":\"FilterBtn_filt__w150e\",\"box\":\"FilterBtn_box__7C4lL\",\"svgIcon\":\"FilterBtn_svgIcon__j2ypC\",\"typography\":\"FilterBtn_typography__7Mp-v\"};","import css from '../ButtonFilter/FilterBtn.module.css'\n\nimport spriteIcon from '../../assets/svg/symbol-defs.svg';\n\nexport const FilterBtn = () => {\n\n\n  return (\n    <>\n      <button className={css.filt}\n        type=\"button\">\n        <div className={css.box}>\n          <svg className={css.svgIcon}>\n          <use href={spriteIcon + '#icon-filter'}></use>        \n          </svg>\n        </div>\n        <div className={css.typography}>\n          Filters\n        </div>\n      </button>\n      </>\n  );\n};","import css from './HeaderDashboard.module.css';\nimport {FilterBtn} from '../ButtonFilter/FilterBtn'\n\nexport const HeaderDashboard = ({title}) => {\n  return (\n    <div className={css.boardHeader}>\n      <h1 className={css.title}>{title}</h1>\n      <p className={css.title}>\n      <FilterBtn/>\n      </p>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__wiIYs\",\"buttonPlain\":\"Button_buttonPlain__tFfdT Button_button__wiIYs\",\"buttonContrast\":\"Button_buttonContrast__x6Ai7 Button_button__wiIYs\",\"icon\":\"Button_icon__KeIH3\"};","import css from './Button.module.css';\nimport svgSprite from '../../assets/svg/symbol-defs.svg';\n\nexport const Button = ({\n  isContrast = true,\n  isIcon = true,\n  type = 'submit',\n  text,\n  action,\n}) => {\n  const padding = type === 'submit' ? '10px' : '14px';\n\n  return (\n    <button\n      type={type}\n      className={isContrast ? css.buttonContrast : css.buttonPlain}\n      onClick={action}\n      style={{ padding }}\n    >\n      {isIcon && (\n        <svg width=\"28px\" height=\"28px\" className={css.icon}>\n          <use href={svgSprite + '#icon-plus'} />\n        </svg>\n      )}\n\n      {text}\n    </button>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"board\":\"MainDashboard_board__G8cUP\",\"columnButton\":\"MainDashboard_columnButton__7FXdX\",\"columnList\":\"MainDashboard_columnList__5Z5fD\"};","// extracted by mini-css-extract-plugin\nexport default {\"cardContainer\":\"CardSection_cardContainer__E1kUA\"};","// extracted by mini-css-extract-plugin\nexport default {\"cardTitle\":\"CardTitle_cardTitle__LuMcy\",\"iconList\":\"CardTitle_iconList__I6PoU\",\"button\":\"CardTitle_button__I-6zk\"};","import css from './CardTitle.module.css';\nimport svgSprite from '../../assets/svg/symbol-defs.svg';\nimport { useDispatch } from 'react-redux';\nimport { deleteColumn, updateColumnById } from 'store/boards/operationsBoards';\n\nexport const CardTitle = ({ title, id }) => {\n  const dispatch = useDispatch();\n\n  const handleEditColumn = () => {\n    dispatch(updateColumnById({ id, title: 'Edit column2' }));\n  };\n\n  const handleDeleteColumn = () => {\n    dispatch(deleteColumn(id));\n  };\n  // 64d88ed82c61c44e750ee955\n\n  return (\n    <div className={css.cardTitle}>\n      <h2>{title}</h2>\n      <ul className={css.iconList}>\n        <li>\n          <button className={css.button} onClick={() => handleEditColumn()}>\n            <svg width={16} height={16} stroke=\"var(--primary-text-color)\">\n              <use href={svgSprite + '#icon-pencil'} />\n            </svg>\n          </button>\n        </li>\n        <li>\n          <button className={css.button} onClick={() => handleDeleteColumn()}>\n            <svg width={16} height={16} stroke=\"var(--primary-text-color)\">\n              <use href={svgSprite + '#icon-trash-04'} />\n            </svg>\n          </button>\n        </li>\n      </ul>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"CardList_list__I9984\"};","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"CardItem_card__9jGsV\",\"title\":\"CardItem_title__ng5rL\",\"text\":\"CardItem_text__PQWJQ\",\"container\":\"CardItem_container__eqrEx\",\"infoBox\":\"CardItem_infoBox__X+yRn\",\"priority\":\"CardItem_priority__KaF09\",\"circle\":\"CardItem_circle__TkNtx\",\"infoTitle\":\"CardItem_infoTitle__nxfr1\",\"info\":\"CardItem_info__+EWv9\",\"iconList\":\"CardItem_iconList__KbybG\",\"button\":\"CardItem_button__-FMeg\"};","import css from './CardItem.module.css';\nimport svgSprite from '../../assets/svg/symbol-defs.svg';\n// import { Calendar } from 'components/Calendar/Calendar';\nimport { useDispatch } from 'react-redux';\nimport { deleteTask, updateTaskById } from 'store/boards/operationsBoards';\n\nexport const CardItem = ({ task }) => {\n  const dispatch = useDispatch();\n// column; \n  const { title, description, priority, deadline, _id, } = task;\n\n  const editData = {\n    title: 'task2',\n    description:\n      'gfut hgfu6 vjkyhrui6 futrrkjdf guyt ftudryw guytiumkhiy bjhfsd cfgdrt  vdhge vhfdyte  cfdre vhgrjht xfgsgt',\n    priority: 'low',\n  };\n\n  const handleEditTask = () => {\n    dispatch(updateTaskById(_id, editData));\n  };\n\n    const handleDeleteTask = () => {\n      dispatch(deleteTask(_id));\n    };\n\n\n  // console.log(\"task:\", task);\n  return (\n    <li className={css.card}>\n      <h3 className={css.title}>{title}</h3>\n      <p className={css.text}>{description}</p>\n\n      <div className={css.container}>\n        <div className={css.infoBox}>\n          <div>\n            <h4 className={css.infoTitle}>Priority</h4>\n            <div className={css.priority}>\n              <div className={css.circle}></div>\n              <p className={css.info}>{priority}</p>\n            </div>\n          </div>\n          <div>\n            <h4 className={css.infoTitle}>Deadline</h4>\n            <p className={css.info}>{deadline}</p>\n            {/* <Calendar /> */}\n          </div>\n        </div>\n        <ul className={css.iconList}>\n          <li>\n            <button className={css.button}>\n              <svg width={16} height={16} stroke=\"var( --accent-color)\">\n                <use href={svgSprite + '#icon-bell'} />\n              </svg>\n            </button>\n          </li>\n          <li>\n            <button className={css.button}>\n              <svg width={16} height={16} stroke=\"currentColor\">\n                <use href={svgSprite + '#icon-arrow-circle-broken-right'} />\n              </svg>\n            </button>\n          </li>\n          <li>\n            <button className={css.button} onClick={() => handleEditTask()}>\n              <svg width={16} height={16} stroke=\"currentColor\">\n                <use href={svgSprite + '#icon-pencil'} />\n              </svg>\n            </button>\n          </li>\n          <li>\n            <button className={css.button} onClick={() => handleDeleteTask()}>\n              <svg width={16} height={16} stroke=\"currentColor\">\n                <use href={svgSprite + '#icon-trash-04'} />\n              </svg>\n            </button>\n          </li>\n        </ul>\n      </div>\n    </li>\n  );\n};\n","import css from './CardList.module.css';\nimport { CardItem } from 'components/CardItem/CardItem';\n\n\nexport const CardList = ({ tasks }) => {\n\n  return (\n    <ul className={css.list} >\n      {tasks.map(task => (\n        <CardItem key={task._id} task={task} />\n      ))}\n    </ul>\n  );\n};\n","import css from './CardSection.module.css';\n\nimport { CardTitle } from 'components/CardTitle/CardTitle';\nimport { CardList } from 'components/CardList/CardList';\nimport { Button } from 'components/Button/Button';\nimport { useDispatch } from 'react-redux';\nimport { addTask } from 'store/boards/operationsBoards';\n\nexport const CardSection = ({ column }) => {\n  const dispatch = useDispatch();\n\n  const handleAddTask = () => {\n    dispatch(\n      addTask({\n        title: 'task2',\n        description:\n          'gfut hgfu6 vjkyhrui6 futrrkjdf guyt ftudryw guytiumkhiy bjhfsd cfgdrt  vdhge vhfdyte  cfdre vhgrjht xfgsgt',\n        deadline: '24/08/2023',\n        columnId: column._id,\n        priority: 'high',\n      })\n    );\n  };\n\n  const isColumn = column.tasks;\n  return (\n    <div className={css.cardContainer}>\n      <CardTitle title={column.title} id={column._id} />\n      {isColumn && <CardList tasks={column.tasks} />}\n      <Button type=\"button\" text=\"Add another card\" action={handleAddTask} />\n    </div>\n  );\n};\n","import { Button } from 'components/Button/Button';\nimport css from './MainDashboard.module.css';\nimport { CardSection } from 'components/CardSection/CardSeection';\nimport { useSelector } from 'react-redux';\nimport { selectCurrentBoard } from 'store/boards/selectorsBoards';\nimport { useDispatch } from 'react-redux';\nimport { addColumn } from 'store/boards/operationsBoards';\n\nexport const MainDashboard = ({ id }) => {\n  const dispatch = useDispatch();\n  const board = useSelector(selectCurrentBoard);\n\n  console.log(board);\n\n  const handleAddСolumn = async() => {\n   await dispatch(addColumn({ title: 'Column5', boardId: id }));\n    console.log(board);\n  };\n\n  return (\n    <div className={css.board}>\n      <ul className={css.columnList}>\n        {board.map(column => (\n          <li key={column._id}>\n            <CardSection column={column} />\n          </li>\n        ))}\n      </ul>\n\n      <div className={css.columnButton}>\n        <Button\n          isContrast={false}\n          type={'button'}\n          text={'Add another column'}\n          action={handleAddСolumn}\n        />\n      </div>\n    </div>\n  );\n};\n","import { Background } from 'components/Background/Background';\nimport { HeaderDashboard } from 'components/HeaderDashboard/HeaderDashboard';\nimport { MainDashboard } from 'components/MainDashboard/MainDashboard';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getBoardByID } from 'store/boards/operationsBoards';\nimport {\n  selectAllBoards,\n  selectCurrentBoard,\n} from 'store/boards/selectorsBoards';\n\nconst ScreensPage = () => {\n  const dispatch = useDispatch();\n  const currentBoard = useSelector(selectCurrentBoard);\n\n  const boards = useSelector(selectAllBoards);\n  const board = boards[1];\n\n  \n  console.log('currentBoard:', currentBoard);\n\n  useEffect(() => {\n    if (board) dispatch(getBoardByID(board._id));\n  }, [dispatch, board]);\n\n  return (\n    <>\n      {board && (\n        <Background>\n          <HeaderDashboard title={board.title} />\n          <MainDashboard id={board._id} />\n        </Background>\n      )}\n    </>\n  );\n};\n\nexport default ScreensPage;\n"],"names":["Background","children","className","css","FilterBtn","type","href","spriteIcon","HeaderDashboard","title","Button","isContrast","isIcon","text","action","padding","onClick","style","width","height","svgSprite","CardTitle","id","dispatch","useDispatch","updateColumnById","stroke","deleteColumn","CardItem","task","description","priority","deadline","_id","editData","updateTaskById","deleteTask","CardList","tasks","map","CardSection","column","isColumn","addTask","columnId","MainDashboard","board","useSelector","selectCurrentBoard","console","log","handleAddСolumn","addColumn","boardId","currentBoard","selectAllBoards","useEffect","getBoardByID"],"sourceRoot":""}